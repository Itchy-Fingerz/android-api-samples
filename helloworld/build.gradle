apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.wrld.helloworld"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            jniDebuggable true
            debuggable true
            minifyEnabled false
        }
    }
}

// latest release is https://bintray.com/wrld/maven/wrld-android-sdk/_latestVersion
def sdkArtifactName = 'com.wrld:wrld-android-sdk:' + sdkVersion + '@aar'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    if (rootProject.getProperty('useLocalSdkBuild').toBoolean()) {
        debugCompile project(path: ':sdk', configuration: 'debug')
        releaseCompile project(path: ':sdk', configuration: 'release')
    } else {
        compile(sdkArtifactName) {
            transitive = true
        }
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:support-core-utils:25.3.0'
    testCompile 'junit:junit:4.12'
}

// Set the API key from the WRLD_API_KEY environment variable, as an alternative to modifying strings.xml
android.applicationVariants.all{ variant ->
    variant.mergeResources.doLast{
        def apiKey = System.getenv("WRLD_API_KEY")
        print "Reading API key from env, WRLD_API_KEY="
        println apiKey

        if (apiKey != null) {
            File valuesFile = file("${buildDir}/intermediates/res/merged/${variant.dirName}/values/values.xml")
            println("Replacing WRLD API key in: " + valuesFile)
            String content = valuesFile.getText('UTF-8')
            content = content.replaceAll(/obtain an api key by signing up at wrld3d.com and insert here/, apiKey)
            valuesFile.write(content, 'UTF-8')
        }
    }
}
